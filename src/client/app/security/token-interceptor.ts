/* 
* Generated by
* 
*      _____ _          __  __      _     _
*     / ____| |        / _|/ _|    | |   | |
*    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
*     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
*     ____) |   < (_| | | | || (_) | | (_| |  __/ |
*    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
*
* The code generator that works in many programming languages
*
*			https://www.skaffolder.com
*
*
* You can generate the code from the command-line
*       https://npmjs.com/package/skaffolder-cli
*
*       npm install -g skaffodler-cli
*
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*
* To remove this comment please upgrade your plan here: 
*      https://app.skaffolder.com/#!/upgrade
*
* Or get up to 70% discount sharing your unique link:
*       https://app.skaffolder.com/#!/register?friend=5e2456320cfc6233ae9336d8
*
* You will get 10% discount for each one of your friends
* 
*/
import { TokenEmitter } from './token-emitter';
import { User } from './../domain/manage_film_example_db/user';
import { AuthenticationService } from './authentication.service';
import { BaseRequestOptions, Headers } from '@angular/http';
import { Injectable } from '@angular/core';

/**
 * This class set JWT token security header in each http request
 */
@Injectable()
export class TokenInterceptor extends BaseRequestOptions {

  headers: Headers;

  constructor(private tokenEmitter: TokenEmitter){
     super();
     this.refresh();
     let instance = this;

     // Register refreshToken event
     this.tokenEmitter.emitter.on("refreshToken", function(){
       instance.refresh()
     });
  }

  /**
   * Set JWT token from local storage to header
   */
  refresh() {

    // Get token from local or session storage
    let token = sessionStorage.getItem("token") || localStorage.getItem("token");
    
    // Set token header
    if (token) {
      this.headers = new Headers({
        'Accept': 'application/json',
        'Authorization': 'Bearer ' + token
      });
    }
  }
  
}