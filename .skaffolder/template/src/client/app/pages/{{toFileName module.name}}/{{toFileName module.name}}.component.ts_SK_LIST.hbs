// Import Libraries
import { Observable } from 'rxjs/Rx';
import { Component, OnInit } from '@angular/core';
import { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from "@angular/material";
import { ModalRemoveComponent } from '../../components/modal-remove.component';


// Import Services
{{#eachResource module._services}}
import { {{capitalize name }}Service } from '../../services/{{toFileName name}}.service';
{{/eachResource}}

// Import Models
import { {{capitalize crudResource.name}} } from '../../domain/{{getDbNameToFileName dbs crudResource._db}}/{{toFileName crudResource.name}}';
{{#each crudResource._relations}}
{{#equal _ent1._id ../crudResource._entity._id}}
import { {{capitalize _ent2.name}} } from '../../domain/{{getDbNameToFileName ../dbs _ent2._resource._db}}/{{toFileName _ent2._resource.name}}';{{/equal}}{{#notEqual _ent1._id ../crudResource._entity._id}}
import { {{#capitalize _ent1.name}}{{/capitalize}} } from '../../domain/{{getDbNameToFileName ../dbs _ent2._resource._db}}/{{toFileName _ent1._resource.name}}';
{{/notEqual}}
{{/each}}

// START - USED SERVICES		
// END - USED SERVICES

// START - REQUIRED RESOURCES		
// END - REQUIRED RESOURCES

@Component({
    selector: "{{toFileName module.name}}",
    templateUrl: './{{toFileName module.name}}.component.html',
    styleUrls: ['./{{toFileName module.name}}.component.css']
})
export class {{capitalize module.name}}Component implements OnInit {
    
    // Attributes
    list: {{capitalize crudResource.name}}[];
    search: any = {};
    idSelected: string;
    
    // Constructor
    constructor({{#eachResource module._services}}
        private {{lowercase name }}Service: {{capitalize name}}Service,{{/eachResource}} 
        public dialog: MatDialog) {}

    // Functions
    ngOnInit(): void {
        this.{{lowercase crudResource.name}}Service.list().subscribe(list => this.list = list);
    }

    openModal(id: string): void {
        let dialogRef = this.dialog.open(ModalRemoveComponent, {
            width: '250px',
            data: () => {
                // Execute on confirm
                this.{{lowercase crudResource.name}}Service.remove(id).subscribe(() => {
                    dialogRef.close();
                });
                this.list = this.list.filter(item => item._id != id);
            }
        });
    }

}